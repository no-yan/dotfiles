#!/bin/zsh
# set -eo pipefail

# De-duplicate PATH entries automatically
typeset -U PATH fpath

# Utility function to safely add directory to PATH
add_to_path() {
  [[ -d "$1" ]] && export PATH="$1:$PATH"
}

# Setup Homebrew (macOS only)
setup_homebrew() {
  echo "Setting up brew.."
  local brew_cmd brew_path
  if ! command -v brew &>/dev/null; then
    for prefix in /opt/homebrew /usr/local; do
      if [[ -x "$prefix/bin/brew" ]]; then
        brew_cmd="$prefix/bin/brew"
        break
      fi
    done

    if [[ -z "$brew_cmd" ]]; then
      echo "Error: Homebrew not found. Please install Homebrew first." >&2
      return 1
    fi
    eval "$($brew_cmd shellenv)"
  else
    [[ -z "$HOMEBREW_PREFIX" ]] && eval "$(brew shellenv)"
  fi
  #   export BREW_PREFIX="$HOMEBREW_PREFIX"
  zsh completion from brew
  fpath=("$HOMEBREW_PREFIX/share/zsh/site-functions" $fpath)
}

# Setup Nix (Linux/other)
setup_nix() {
  local nix_profile="$HOME/.nix-profile/etc/profile.d/nix.sh"
  [[ -f "$nix_profile" ]] && source "$nix_profile"
}

# Detect OS and setup accordingly
case "$(uname)" in
  Darwin) setup_homebrew || exit 1 ;;
  *) setup_nix ;;
esac

# ========================================
# Environment Variables
# ========================================
[[ -d "$HOME/go" ]] && export GOPATH="$HOME/go"
export EDITOR="nvim"

# ESMeta (if available)
if [[ -d "$HOME/ghq/github.com/es-meta/esmeta" ]]; then
  export ESMETA_HOME="$HOME/ghq/github.com/es-meta/esmeta"
  add_to_path "$ESMETA_HOME/bin"
fi

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
add_to_path "$PNPM_HOME"

# gcloud SDK
[[ -f "$HOME/google-cloud-sdk/path.zsh.inc" ]] && source "$HOME/google-cloud-sdk/path.zsh.inc"

# ========================================
# PATH setup
# ========================================
# Go binaries
[[ -d ${GOPATH:-} ]] && add_to_path "$GOPATH/bin"

# Standard ML
add_to_path "/usr/local/smlnj/bin"

# User-local Python packages
add_to_path "$HOME/.local/bin"

# Yarn
add_to_path "$HOME/.yarn/bin"

# LLVM (Raspberry pi OS only)
add_to_path "/usr/lib/llvm-20/bin"

